(()=>{"use strict";const e=(e,t,r)=>{let o=t,a=!1;return{name:e,length:t,piece:r,getHits:()=>o,getIsSunk:()=>a,hit:()=>{o-=1,o<=0&&(a=!0)}}},t=(t,r)=>{const o=t,a=(()=>{let t=!1,r=17;const o=[],a=[],n=(e,t,r,n=!0)=>{const{length:l,piece:s}=r;if(n){if(l+e>=10)return!1;for(let r=e;r<l+e;r+=1)if(o[t][r]&&o[t][r])return!1;for(let r=e;r<l+e;r+=1)o[t][r]=s;o[t][e+l-1]=s}else{if(l+t>=10)return!1;for(let r=t;r<t+l;r+=1)if(o[r]&&o[r][e])return!1;for(let r=t;r<t+l;r+=1)o[r]&&(o[r][e]=s);o[t+l-1][e]=s}return a.push(r),!0};return{board:o,ships:a,startingPieces:[["carrier",5,"C"],["battleship",4,"B"],["destroyer",3,"D"],["submarine",3,"S"],["patrol boat",2,"P"]],createGameboard:()=>{for(let e=0;e<10;e+=1){const e=[];for(let t=0;t<10;t+=1)e.push(null);o.push(e)}},placePiece:n,receiveAttack:(e,n)=>{const l=o[e][n];if(l){const s=a.find((e=>e.piece===l));s&&(o[e][n]="X",s.hit(),r-=1,r<=0&&(t=!0,console.log("all Sunk")))}else o[e][n]="0"},populateBoard:t=>{const r=()=>Math.floor(10*Math.random());for(let o=0;o<t.length;o+=1){const a=t[o],l=e(a[0],a[1],a[2]);let s=!1;for(;!s;){const e=Math.random()>.5,t=r(),o=r();s=n(t,o,l,e)}}},getTotalHits:()=>r,getAllSunk:()=>t,allSunk:t}})();return a.createGameboard(),a.populateBoard(a.startingPieces),{playerBoard:a,turn:e=>{r?(e=>{const t=()=>Math.floor(10*Math.random());let r,o;do{r=t(),o=t()}while(null!==a.board[r][o]);console.log("hello"),e.receiveAttack(r,o)})(e):(e=>{let t,r;do{t=parseInt(prompt("Enter x coord:")),r=parseInt(prompt("Enter y coord:"))}while(null!==a.board[t][r]);console.log("goodbye"),e.receiveAttack(t,r)})(e)},playerName:o}};(()=>{let e,r,o,a,n=0;const l=e=>{const t=document.getElementById("game-container"),r=(e=>{console.log(e.playerName);const t=e.playerBoard.board;return`\n    <table id='${e.playerName}-board' class="game-board">\n      ${t.map(((e,t)=>`\n        <tr> \n        ${e.map(((e,r)=>`<td data-x="${r}" data-y="${t}"><button data-x="${r}" data-y="${t}">${e||""}</button></td>`))}\n        </tr>\n        `)).join("")}\n    </table>\n    `})(e);t.innerHTML+=r};return{startGame:()=>{o=t("human",!1),a=t("computer",!0),console.log(o),l(o),l(a),e=o,r=a},takeTurn:()=>{for(;n<100;)e.turn(r.playerBoard),e=e===o?a:o,r=r===a?o:a,n++},checkGameOver:()=>{const e=o.playerBoard.getAllsunk(),t=a.playerBoard.getAllsunk();e&&(n=!0),t&&(n=!0)},boardComponent:l}})().startGame()})();